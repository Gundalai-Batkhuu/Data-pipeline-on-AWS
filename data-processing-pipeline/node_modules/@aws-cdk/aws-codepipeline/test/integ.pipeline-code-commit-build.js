"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const codebuild = require("@aws-cdk/aws-codebuild");
const codecommit = require("@aws-cdk/aws-codecommit");
const cdk = require("@aws-cdk/cdk");
const codepipeline = require("../lib");
const app = new cdk.App();
const stack = new cdk.Stack(app, 'aws-cdk-codepipeline-codecommit-codebuild');
const repository = new codecommit.Repository(stack, 'MyRepo', {
    repositoryName: 'my-repo',
});
const pipeline = new codepipeline.Pipeline(stack, 'Pipeline');
const sourceStage = new codepipeline.Stage(pipeline, 'source', { pipeline });
new codecommit.PipelineSourceAction(stack, 'source', {
    stage: sourceStage,
    outputArtifactName: 'SourceArtifact',
    repository,
    pollForSourceChanges: true,
});
const project = new codebuild.Project(stack, 'MyBuildProject', {
    source: new codebuild.CodePipelineSource(),
});
const buildStage = new codepipeline.Stage(pipeline, 'build', { pipeline });
project.addToPipeline(buildStage, 'build');
project.addToPipelineAsTest(buildStage, 'test');
app.run();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcucGlwZWxpbmUtY29kZS1jb21taXQtYnVpbGQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbnRlZy5waXBlbGluZS1jb2RlLWNvbW1pdC1idWlsZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG9EQUFxRDtBQUNyRCxzREFBdUQ7QUFDdkQsb0NBQXFDO0FBQ3JDLHVDQUF3QztBQUV4QyxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUUxQixNQUFNLEtBQUssR0FBRyxJQUFJLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLDJDQUEyQyxDQUFDLENBQUM7QUFFOUUsTUFBTSxVQUFVLEdBQUcsSUFBSSxVQUFVLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUU7SUFDNUQsY0FBYyxFQUFFLFNBQVM7Q0FDMUIsQ0FBQyxDQUFDO0FBRUgsTUFBTSxRQUFRLEdBQUcsSUFBSSxZQUFZLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQztBQUU5RCxNQUFNLFdBQVcsR0FBRyxJQUFJLFlBQVksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLFFBQVEsRUFBRSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7QUFDN0UsSUFBSSxVQUFVLENBQUMsb0JBQW9CLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRTtJQUNuRCxLQUFLLEVBQUUsV0FBVztJQUNsQixrQkFBa0IsRUFBRSxnQkFBZ0I7SUFDcEMsVUFBVTtJQUNWLG9CQUFvQixFQUFFLElBQUk7Q0FDM0IsQ0FBQyxDQUFDO0FBRUgsTUFBTSxPQUFPLEdBQUcsSUFBSSxTQUFTLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxnQkFBZ0IsRUFBRTtJQUM3RCxNQUFNLEVBQUUsSUFBSSxTQUFTLENBQUMsa0JBQWtCLEVBQUU7Q0FDM0MsQ0FBQyxDQUFDO0FBRUgsTUFBTSxVQUFVLEdBQUcsSUFBSSxZQUFZLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxPQUFPLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO0FBQzNFLE9BQU8sQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQzNDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFFaEQsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvZGVidWlsZCA9IHJlcXVpcmUoJ0Bhd3MtY2RrL2F3cy1jb2RlYnVpbGQnKTtcbmltcG9ydCBjb2RlY29tbWl0ID0gcmVxdWlyZSgnQGF3cy1jZGsvYXdzLWNvZGVjb21taXQnKTtcbmltcG9ydCBjZGsgPSByZXF1aXJlKCdAYXdzLWNkay9jZGsnKTtcbmltcG9ydCBjb2RlcGlwZWxpbmUgPSByZXF1aXJlKCcuLi9saWInKTtcblxuY29uc3QgYXBwID0gbmV3IGNkay5BcHAoKTtcblxuY29uc3Qgc3RhY2sgPSBuZXcgY2RrLlN0YWNrKGFwcCwgJ2F3cy1jZGstY29kZXBpcGVsaW5lLWNvZGVjb21taXQtY29kZWJ1aWxkJyk7XG5cbmNvbnN0IHJlcG9zaXRvcnkgPSBuZXcgY29kZWNvbW1pdC5SZXBvc2l0b3J5KHN0YWNrLCAnTXlSZXBvJywge1xuICByZXBvc2l0b3J5TmFtZTogJ215LXJlcG8nLFxufSk7XG5cbmNvbnN0IHBpcGVsaW5lID0gbmV3IGNvZGVwaXBlbGluZS5QaXBlbGluZShzdGFjaywgJ1BpcGVsaW5lJyk7XG5cbmNvbnN0IHNvdXJjZVN0YWdlID0gbmV3IGNvZGVwaXBlbGluZS5TdGFnZShwaXBlbGluZSwgJ3NvdXJjZScsIHsgcGlwZWxpbmUgfSk7XG5uZXcgY29kZWNvbW1pdC5QaXBlbGluZVNvdXJjZUFjdGlvbihzdGFjaywgJ3NvdXJjZScsIHtcbiAgc3RhZ2U6IHNvdXJjZVN0YWdlLFxuICBvdXRwdXRBcnRpZmFjdE5hbWU6ICdTb3VyY2VBcnRpZmFjdCcsXG4gIHJlcG9zaXRvcnksXG4gIHBvbGxGb3JTb3VyY2VDaGFuZ2VzOiB0cnVlLFxufSk7XG5cbmNvbnN0IHByb2plY3QgPSBuZXcgY29kZWJ1aWxkLlByb2plY3Qoc3RhY2ssICdNeUJ1aWxkUHJvamVjdCcsIHtcbiAgc291cmNlOiBuZXcgY29kZWJ1aWxkLkNvZGVQaXBlbGluZVNvdXJjZSgpLFxufSk7XG5cbmNvbnN0IGJ1aWxkU3RhZ2UgPSBuZXcgY29kZXBpcGVsaW5lLlN0YWdlKHBpcGVsaW5lLCAnYnVpbGQnLCB7IHBpcGVsaW5lIH0pO1xucHJvamVjdC5hZGRUb1BpcGVsaW5lKGJ1aWxkU3RhZ2UsICdidWlsZCcpO1xucHJvamVjdC5hZGRUb1BpcGVsaW5lQXNUZXN0KGJ1aWxkU3RhZ2UsICd0ZXN0Jyk7XG5cbmFwcC5ydW4oKTtcbiJdfQ==