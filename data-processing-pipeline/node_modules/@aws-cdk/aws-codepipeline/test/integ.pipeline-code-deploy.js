"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const codedeploy = require("@aws-cdk/aws-codedeploy");
const s3 = require("@aws-cdk/aws-s3");
const cdk = require("@aws-cdk/cdk");
const codepipeline = require("../lib");
const app = new cdk.App();
const stack = new cdk.Stack(app, 'aws-cdk-codepipeline-codedeploy');
const application = new codedeploy.ServerApplication(stack, 'CodeDeployApplication', {
    applicationName: 'IntegTestDeployApp',
});
const deploymentConfig = new codedeploy.ServerDeploymentConfig(stack, 'CustomDeployConfig', {
    minHealthyHostCount: 0,
});
const deploymentGroup = new codedeploy.ServerDeploymentGroup(stack, 'CodeDeployGroup', {
    application,
    deploymentGroupName: 'IntegTestDeploymentGroup',
    deploymentConfig,
});
const bucket = new s3.Bucket(stack, 'CodeDeployPipelineIntegTest', {
    versioned: true,
    removalPolicy: cdk.RemovalPolicy.Destroy,
});
const pipeline = new codepipeline.Pipeline(stack, 'Pipeline', {
    artifactBucket: bucket,
});
const sourceStage = new codepipeline.Stage(stack, 'Source', { pipeline });
bucket.addToPipeline(sourceStage, 'S3Source', {
    bucketKey: 'application.zip',
    outputArtifactName: 'SourceOutput',
});
const deployStage = new codepipeline.Stage(stack, 'Deploy', { pipeline });
deploymentGroup.addToPipeline(deployStage, 'CodeDeploy');
app.run();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcucGlwZWxpbmUtY29kZS1kZXBsb3kuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbnRlZy5waXBlbGluZS1jb2RlLWRlcGxveS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNEQUF1RDtBQUN2RCxzQ0FBdUM7QUFDdkMsb0NBQXFDO0FBQ3JDLHVDQUF3QztBQUV4QyxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUUxQixNQUFNLEtBQUssR0FBRyxJQUFJLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLGlDQUFpQyxDQUFDLENBQUM7QUFFcEUsTUFBTSxXQUFXLEdBQUcsSUFBSSxVQUFVLENBQUMsaUJBQWlCLENBQUMsS0FBSyxFQUFFLHVCQUF1QixFQUFFO0lBQ25GLGVBQWUsRUFBRSxvQkFBb0I7Q0FDdEMsQ0FBQyxDQUFDO0FBRUgsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLFVBQVUsQ0FBQyxzQkFBc0IsQ0FBQyxLQUFLLEVBQUUsb0JBQW9CLEVBQUU7SUFDMUYsbUJBQW1CLEVBQUUsQ0FBQztDQUN2QixDQUFDLENBQUM7QUFFSCxNQUFNLGVBQWUsR0FBRyxJQUFJLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLEVBQUUsaUJBQWlCLEVBQUU7SUFDckYsV0FBVztJQUNYLG1CQUFtQixFQUFFLDBCQUEwQjtJQUMvQyxnQkFBZ0I7Q0FDakIsQ0FBQyxDQUFDO0FBRUgsTUFBTSxNQUFNLEdBQUcsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSw2QkFBNkIsRUFBRTtJQUNqRSxTQUFTLEVBQUUsSUFBSTtJQUNmLGFBQWEsRUFBRSxHQUFHLENBQUMsYUFBYSxDQUFDLE9BQU87Q0FDekMsQ0FBQyxDQUFDO0FBRUgsTUFBTSxRQUFRLEdBQUcsSUFBSSxZQUFZLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxVQUFVLEVBQUU7SUFDNUQsY0FBYyxFQUFFLE1BQU07Q0FDdkIsQ0FBQyxDQUFDO0FBRUgsTUFBTSxXQUFXLEdBQUcsSUFBSSxZQUFZLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO0FBQzFFLE1BQU0sQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFLFVBQVUsRUFBRTtJQUM1QyxTQUFTLEVBQUUsaUJBQWlCO0lBQzVCLGtCQUFrQixFQUFFLGNBQWM7Q0FDbkMsQ0FBQyxDQUFDO0FBRUgsTUFBTSxXQUFXLEdBQUcsSUFBSSxZQUFZLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO0FBQzFFLGVBQWUsQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFLFlBQVksQ0FBQyxDQUFDO0FBRXpELEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb2RlZGVwbG95ID0gcmVxdWlyZSgnQGF3cy1jZGsvYXdzLWNvZGVkZXBsb3knKTtcbmltcG9ydCBzMyA9IHJlcXVpcmUoJ0Bhd3MtY2RrL2F3cy1zMycpO1xuaW1wb3J0IGNkayA9IHJlcXVpcmUoJ0Bhd3MtY2RrL2NkaycpO1xuaW1wb3J0IGNvZGVwaXBlbGluZSA9IHJlcXVpcmUoJy4uL2xpYicpO1xuXG5jb25zdCBhcHAgPSBuZXcgY2RrLkFwcCgpO1xuXG5jb25zdCBzdGFjayA9IG5ldyBjZGsuU3RhY2soYXBwLCAnYXdzLWNkay1jb2RlcGlwZWxpbmUtY29kZWRlcGxveScpO1xuXG5jb25zdCBhcHBsaWNhdGlvbiA9IG5ldyBjb2RlZGVwbG95LlNlcnZlckFwcGxpY2F0aW9uKHN0YWNrLCAnQ29kZURlcGxveUFwcGxpY2F0aW9uJywge1xuICBhcHBsaWNhdGlvbk5hbWU6ICdJbnRlZ1Rlc3REZXBsb3lBcHAnLFxufSk7XG5cbmNvbnN0IGRlcGxveW1lbnRDb25maWcgPSBuZXcgY29kZWRlcGxveS5TZXJ2ZXJEZXBsb3ltZW50Q29uZmlnKHN0YWNrLCAnQ3VzdG9tRGVwbG95Q29uZmlnJywge1xuICBtaW5IZWFsdGh5SG9zdENvdW50OiAwLFxufSk7XG5cbmNvbnN0IGRlcGxveW1lbnRHcm91cCA9IG5ldyBjb2RlZGVwbG95LlNlcnZlckRlcGxveW1lbnRHcm91cChzdGFjaywgJ0NvZGVEZXBsb3lHcm91cCcsIHtcbiAgYXBwbGljYXRpb24sXG4gIGRlcGxveW1lbnRHcm91cE5hbWU6ICdJbnRlZ1Rlc3REZXBsb3ltZW50R3JvdXAnLFxuICBkZXBsb3ltZW50Q29uZmlnLFxufSk7XG5cbmNvbnN0IGJ1Y2tldCA9IG5ldyBzMy5CdWNrZXQoc3RhY2ssICdDb2RlRGVwbG95UGlwZWxpbmVJbnRlZ1Rlc3QnLCB7XG4gIHZlcnNpb25lZDogdHJ1ZSxcbiAgcmVtb3ZhbFBvbGljeTogY2RrLlJlbW92YWxQb2xpY3kuRGVzdHJveSxcbn0pO1xuXG5jb25zdCBwaXBlbGluZSA9IG5ldyBjb2RlcGlwZWxpbmUuUGlwZWxpbmUoc3RhY2ssICdQaXBlbGluZScsIHtcbiAgYXJ0aWZhY3RCdWNrZXQ6IGJ1Y2tldCxcbn0pO1xuXG5jb25zdCBzb3VyY2VTdGFnZSA9IG5ldyBjb2RlcGlwZWxpbmUuU3RhZ2Uoc3RhY2ssICdTb3VyY2UnLCB7IHBpcGVsaW5lIH0pO1xuYnVja2V0LmFkZFRvUGlwZWxpbmUoc291cmNlU3RhZ2UsICdTM1NvdXJjZScsIHtcbiAgYnVja2V0S2V5OiAnYXBwbGljYXRpb24uemlwJyxcbiAgb3V0cHV0QXJ0aWZhY3ROYW1lOiAnU291cmNlT3V0cHV0Jyxcbn0pO1xuXG5jb25zdCBkZXBsb3lTdGFnZSA9IG5ldyBjb2RlcGlwZWxpbmUuU3RhZ2Uoc3RhY2ssICdEZXBsb3knLCB7IHBpcGVsaW5lIH0pO1xuZGVwbG95bWVudEdyb3VwLmFkZFRvUGlwZWxpbmUoZGVwbG95U3RhZ2UsICdDb2RlRGVwbG95Jyk7XG5cbmFwcC5ydW4oKTtcbiJdfQ==